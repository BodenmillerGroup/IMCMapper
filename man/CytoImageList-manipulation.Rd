% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CytoImageList-utils.R
\docType{methods}
\name{CytoImageList-manipulation}
\alias{CytoImageList-manipulation}
\alias{scaleImages}
\alias{scaleImages,CytoImageList-method}
\alias{normalize}
\alias{normalize,CytoImageList-method}
\title{Manipulating CytoImageList objects}
\value{
A CytoImageList object containing the manipulated Images
}
\description{
Methods to change pixel values in CytoImageList objects. In the
following sections, \code{object} is a \linkS4class{CytoImageList} object
containing one or multiple channels.
}
\section{Image scaling}{

In some cases, images need to be scaled by a constant
(e.g. 2^16-1 = 65535) \code{value} to revert them back to the original
pixel values after reading them in.
\describe{
\item{\code{scaleImages(object, value)}:}{Scales all images in the
\linkS4class{CytoImageList} object \code{object} by \code{value}.}
}
}

\section{Image normalization}{

Linear scaling of the intensity values of each \linkS4class{Image} contained
in a \linkS4class{CytoImageList} \code{object} to a specific range. Images can
either be scaled to the minimum/maximum value per channel or across all
channels (default \code{separateChannels = TRUE}). Also, Images can be scaled
to the minimum/maximum value per image or across all images (default
\code{separateImages = FALSE}). The latter allows the visual comparison of
intensity values across images.

To clip the images before normalization, the \code{inputRange} or
\code{percentileRange} parameters can be set. The main difference between
these two options is a hard (inputRange) or percentile (percentileRange)
clipping range. \code{percentileRange} allows setting the minimum and maximum
range of values in terms of percentiles (e.g. \code{c(0, 0.99)} for 0 and
99th percentile clipping).

\code{normalize(object, separateChannels = TRUE, separateImages = FALSE,
ft = c(0, 1), percentileRange = c(0, 1), inputRange = NULL)}:

\describe{
\item{\code{object}:}{A CytoImageList object}
\item{\code{separateChannels}:}{Logical if pixel values should be normalized
per channel (default) or across all channles.}
\item{\code{separateImages}:}{Logical if pixel values should be normalized
per image or across all images (default).}
\item{\code{ft}:}{Numeric vector of 2 values, target minimum and maximum
intensity values after normalization (see \code{\link[EBImage]{normalize}}).}
\item{\code{percentileRange}:}{Numeric vector of 2 values between 0 and 1,
sets the precentile clipping range of the input intensity values.}
\item{\code{inputRange}:}{Numeric vector of 2 values, sets the absolute
clipping range of the input intensity values (see
\code{\link[EBImage]{normalize}}).}
}
}

\examples{
data(pancreasImages)

# Scale images to create segmentation masks
cur_files <- list.files(system.file("extdata", package = "cytomapper"),
                        pattern = "mask.tiff", full.names = TRUE)
x <- loadImages(cur_files)
# Error when running plotCells(x)
# Therefore scale to account for 16 bit encoding
x <- scaleImages(x, 2^16 - 1)
plotCells(x)

# Default normalization
x <- normalize(pancreasImages)
plotPixels(x, colour_by = c("H3", "SMA"))

# Setting the clipping range
x <- normalize(pancreasImages, percentileRange = c(0, 0.99))
plotPixels(x, colour_by = c("H3", "SMA"))

# Normalizing per image
x <- normalize(pancreasImages, separateImages = TRUE,
                percentileRange = c(0, 0.99))
plotPixels(x, colour_by = c("H3", "SMA"))

}
\seealso{
\code{\link[EBImage]{normalize}} for details on Image normalization
}
\author{
Nils Eling \email{nils.eling@dqbm.uzh.ch}
}
