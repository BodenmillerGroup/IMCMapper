% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IMCImageList-class.R, R/IMCImageList.R
\docType{class}
\name{IMCImageList-class}
\alias{IMCImageList-class}
\alias{IMCImageList}
\alias{coerce,ANY,IMCImageList-method}
\alias{coerce,list,IMCImageList-method}
\alias{show,IMCImageList-method}
\alias{plot,IMCImageList,ANY-method}
\alias{plot-IMCImageList-method}
\title{S4 class for list of images}
\usage{
IMCImageList(...)
}
\arguments{
\item{...}{A list of images (or coercible to a list) or individual images}
}
\value{
An IMCImageList object
}
\description{
This class facilitates the handling of multiple one- or multi-channel images.
It inherits from \code{\linkS4class{SimpleList}} setting
\code{elementType="Image"}. Therefore, each slot contains an either one- or
multi-dimensional array in form of an \code{\linkS4class{Image}} object.
}
\details{
Similar to the \code{\linkS4class{Image}} class, the first two
  dimensions of each entry indicate the spatial dimension of the image. These
  can be different for each entry. The third dimension indicates the number
  of channels per Image. Each entry in the IMCImageList class object must
  contain the same number of channels. Here, each channel represents pixel
  values indicating measurement intensities or in case of segmentation masks
  the cells' ID. The IMCImageList class therefore only supports a Grayscale
  colormode (see \code{\link[EBImage]{colormode}}) representation of each
  individual image.

  The class further contains an \code{\link{elementMetadata}} slot that
  stores image-level meta information. This slot should be accessed using the
  \code{\link[S4Vectors]{mcols}} accessor function.
}
\section{Restrictions on entry names}{

The IMCImageList class only supports unique entry names to avoid duplicated
images. Names of an IMCImageList object can be get and set via \code{names(x)},
where \code{x} is an IMCImageList object. Furthermore, only named or unnamed
IMCImageList objects are allowed. Partially named objects causing empty or NA
names return an error.
}

\section{Coercion}{

Coercion to and from list, \code{\linkS4class{SimpleList}} and
\code{\linkS4class{List}}: \describe{ \item{as.list(x), as(x, "SimpleList"),
as(x, "SimpleList"):}{Coercion from an IMCImageList object \code{x}} \item{as(x,
"IMCImageList"):}{Coercion from a list, SimpleList or List object \code{x} to an
IMCImageList object} }
}

\section{Looping}{

While \code{\link[base]{lapply}} and \code{\link[base]{mapply}} return
regular list objects, \code{\link[S4Vectors]{endoapply}} and
\code{\link[S4Vectors]{mendoapply}} return IMCImageList objects.
}

\examples{
# Creation of IMCImageList
u <- matrix(rbinom(100, 10, 0.5), ncol=10, nrow=10)
v <- matrix(rbinom(100, 10, 0.5), ncol=10, nrow=10)
IL1 <- IMCImageList(image1 = Image(u), image2 = Image(v))

# Coercion
as.list(IL1)
as(IL1, "SimpleList")
as(list(image1 = Image(u), image2 = Image(v)), "IMCImageList")

}
\seealso{
\code{\linkS4class{Image}}, for further image analysis tools.
\code{\linkS4class{SimpleList}}, for basics functions to handle SimpleList
objects
\code{?\link{loadImages}}, for reading images into an IMCImageList
object
\code{?"\link{IMCImageList-naming}"}, for setting and getting image and
channel names
\code{?"\link{IMCImageList-subsetting}"}, for subsetting and
accessor functions
}
\author{
Nils Eling (\email{nils.eling@dqbm.uzh.ch})
}
